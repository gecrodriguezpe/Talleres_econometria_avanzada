promedio = mean(edad, na.rm = T),
desv_estandar = sd(edad, na.rm = T),
minimo = min(edad, na.rm = T),
maximo = max(edad, na.rm = T)); base_exportar
is.num <- sapply(base_edad, is.numeric)
DF[is.num] <- lapply(base_edad[is.num], round, 8)
# Estadísticas descriptivas para la variable "edad"
base_edad = base %>%
summarise(num_observaciones = n(),
promedio = mean(edad, na.rm = T),
desv_estandar = sd(edad, na.rm = T),
minimo = min(edad, na.rm = T),
maximo = max(edad, na.rm = T)); base_edad
is.num <- sapply(base_edad, is.numeric)
DF[is.num] <- lapply(base_edad[is.num], round, 8)
base_edad[is.num] <- lapply(base_edad[is.num], round, 8)
base_edad
# Estadísticas descriptivas para la variable "edad"
base_edad = base %>%
summarise(num_observaciones = n(),
promedio = mean(edad, na.rm = T),
desv_estandar = sd(edad, na.rm = T),
minimo = min(edad, na.rm = T),
maximo = max(edad, na.rm = T)); base_edad
is.num <- sapply(base_edad, is.numeric)
base_edad[is.num] <- lapply(base_edad[is.num], round, 2)
base_edad
round_df(base_edad, 2)
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
round_df(base_edad, 2)
round_df(base_edad, 2)
14.00
# Estadísticas descriptivas para la variable "puntaje_saber11"
base_puntaje_saber11 = base %>%
summarise(num_observaciones = n(),
promedio = mean(puntaje_saber11, na.rm = T),
desv_estandar = sd(puntaje_saber11, na.rm = T),
minimo = min(puntaje_saber11, na.rm = T),
maximo = max(puntaje_saber11, na.rm = T)); base_exportar
# Estadísticas descriptivas para la variable "puntaje_saber11"
base_puntaje_saber11 = base %>%
summarise(num_observaciones = n(),
promedio = mean(puntaje_saber11, na.rm = T),
desv_estandar = sd(puntaje_saber11, na.rm = T),
minimo = min(puntaje_saber11, na.rm = T),
maximo = max(puntaje_saber11, na.rm = T)); base_puntaje_saber11
# Estadísticas descriptivas para la variable "edad"
base_edad = base %>%
summarise(num_observaciones = n(),
promedio = mean(edad, na.rm = T),
desv_estandar = sd(edad, na.rm = T),
minimo = min(edad, na.rm = T),
maximo = max(edad, na.rm = T)); base_edad
# Estadísticas descriptivas para la variable "puntaje_saber11"
base_puntaje_saber11 = base %>%
summarise(num_observaciones = n(),
promedio = mean(puntaje_saber11, na.rm = T),
desv_estandar = sd(puntaje_saber11, na.rm = T),
minimo = min(puntaje_saber11, na.rm = T),
maximo = max(puntaje_saber11, na.rm = T)); base_puntaje_saber11
# Estadísticas descriptivas para la variable "estrato"
base_estrato = base %>%
summarise(num_observaciones = n(),
promedio = mean(estrato, na.rm = T),
desv_estandar = sd(estrato, na.rm = T),
minimo = min(estrato, na.rm = T),
maximo = max(estrato, na.rm = T)); base_estrato
# Estadísticas descriptivas para la variable "miembros_familia"
base_miembros_familia = base %>%
summarise(num_observaciones = n(),
promedio = mean(miembros_familia, na.rm = T),
desv_estandar = sd(miembros_familia, na.rm = T),
minimo = min(miembros_familia, na.rm = T),
maximo = max(miembros_familia, na.rm = T)); base_miembros_familia
# Dataframe con todas las estadísticas descriptivas juntas para las 4 variables de interés
bind_rows(base_puntaje_saber11, base_edad, base_estrato, base_miembros_familia)
row.names(base_exportar) = c("puntaje_saber11",
"edad",
"estrato",
"miembros_familia")
# Dataframe con todas las estadísticas descriptivas juntas para las 4 variables de interés
base_exportar = bind_rows(base_puntaje_saber11,
base_edad,
base_estrato,
base_miembros_familia) %>%
mutate(varible = c("puntaje_saber11",
"edad",
"estrato",
"miembros_familia"))
# Dataframe con todas las estadísticas descriptivas juntas para las 4 variables de interés
base_exportar = bind_rows(base_puntaje_saber11,
base_edad,
base_estrato,
base_miembros_familia) %>%
mutate(varible = c("puntaje_saber11",
"edad",
"estrato",
"miembros_familia")); base_exportar
# Dataframe con todas las estadísticas descriptivas juntas para las 4 variables de interés
base_exportar = bind_rows(base_puntaje_saber11,
base_edad,
base_estrato,
base_miembros_familia) %>%
mutate(variable = c("puntaje_saber11",
"edad",
"estrato",
"miembros_familia")) %>%
select(variable, !variable); base_exportar
?xtable
xtable(base_exportar, type = "latex")
xtable(base_exportar, type = "latex", digits = 2)
xtable(base_exportar, type = "latex", digits = 2)
# Estadísticas descriptivas para la variable "edad"
base_edad = base %>%
summarise(num_observaciones = sum(!is.na(edad)),
promedio = mean(edad, na.rm = T),
desv_estandar = sd(edad, na.rm = T),
minimo = min(edad, na.rm = T),
maximo = max(edad, na.rm = T)); base_edad
# Estadísticas descriptivas para la variable "estrato"
base_estrato = base %>%
summarise(num_observaciones = sum(!is.na(estrato)),
promedio = mean(estrato, na.rm = T),
desv_estandar = sd(estrato, na.rm = T),
minimo = min(estrato, na.rm = T),
maximo = max(estrato, na.rm = T)); base_estrato
# Estadísticas descriptivas para la variable "miembros_familia"
base_miembros_familia = base %>%
summarise(num_observaciones = sum(!is.na(miembros_familia)),
promedio = mean(miembros_familia, na.rm = T),
desv_estandar = sd(miembros_familia, na.rm = T),
minimo = min(miembros_familia, na.rm = T),
maximo = max(miembros_familia, na.rm = T)); base_miembros_familia
# Dataframe con todas las estadísticas descriptivas juntas para las 4 variables de interés
base_exportar = bind_rows(base_puntaje_saber11,
base_edad,
base_estrato,
base_miembros_familia) %>%
mutate(variable = c("puntaje_saber11",
"edad",
"estrato",
"miembros_familia")) %>%
select(variable, !variable); base_exportar
# Estadísticas descriptivas para la variable "puntaje_saber11"
base_puntaje_saber11 = base %>%
summarise(num_observaciones = sum(!is.na(puntaje_saber11)),
promedio = mean(puntaje_saber11, na.rm = T),
desv_estandar = sd(puntaje_saber11, na.rm = T),
minimo = min(puntaje_saber11, na.rm = T),
maximo = max(puntaje_saber11, na.rm = T)); base_puntaje_saber11
# Estadísticas descriptivas para la variable "edad"
base_edad = base %>%
summarise(num_observaciones = sum(!is.na(edad)),
promedio = mean(edad, na.rm = T),
desv_estandar = sd(edad, na.rm = T),
minimo = min(edad, na.rm = T),
maximo = max(edad, na.rm = T)); base_edad
# Estadísticas descriptivas para la variable "estrato"
base_estrato = base %>%
summarise(num_observaciones = sum(!is.na(estrato)),
promedio = mean(estrato, na.rm = T),
desv_estandar = sd(estrato, na.rm = T),
minimo = min(estrato, na.rm = T),
maximo = max(estrato, na.rm = T)); base_estrato
# Estadísticas descriptivas para la variable "miembros_familia"
base_miembros_familia = base %>%
summarise(num_observaciones = sum(!is.na(miembros_familia)),
promedio = mean(miembros_familia, na.rm = T),
desv_estandar = sd(miembros_familia, na.rm = T),
minimo = min(miembros_familia, na.rm = T),
maximo = max(miembros_familia, na.rm = T)); base_miembros_familia
# Dataframe con todas las estadísticas descriptivas juntas para las 4 variables de interés
base_exportar = bind_rows(base_puntaje_saber11,
base_edad,
base_estrato,
base_miembros_familia) %>%
mutate(variable = c("puntaje_saber11",
"edad",
"estrato",
"miembros_familia")) %>%
select(variable, !variable); base_exportar
library(tidyverse)
library(readxl)
library(xtable)
# Preliminares ----
# Definición del directorio de trabajo
setwd("~/Documents/GitHub/semestre8_git/Econometría_avanzada/Talleres_econometria_avanzada/Taller2/Bases_datos")
# Importación base de datos
base = read_delim("SPP_Base.csv", delim = "$")
# Visualización de la base de datos
glimpse(base)
# a) tabla de estadı́sticas descriptivas ----
# Se va a generar una tabla de estadísticas descriptivas para: puntaje_saber11, edad, estrato, miembros_familia
# Se reporta el número de observaciones, el promedio de la variable, su desviación estándar y el mı́nimo y máximo observados.
# Estadísticas descriptivas para la variable "puntaje_saber11"
base_puntaje_saber11 = base %>%
summarise(num_observaciones = sum(!is.na(puntaje_saber11)),
promedio = mean(puntaje_saber11, na.rm = T),
desv_estandar = sd(puntaje_saber11, na.rm = T),
minimo = min(puntaje_saber11, na.rm = T),
maximo = max(puntaje_saber11, na.rm = T)); base_puntaje_saber11
# Estadísticas descriptivas para la variable "edad"
base_edad = base %>%
summarise(num_observaciones = sum(!is.na(edad)),
promedio = mean(edad, na.rm = T),
desv_estandar = sd(edad, na.rm = T),
minimo = min(edad, na.rm = T),
maximo = max(edad, na.rm = T)); base_edad
# Estadísticas descriptivas para la variable "estrato"
base_estrato = base %>%
summarise(num_observaciones = sum(!is.na(estrato)),
promedio = mean(estrato, na.rm = T),
desv_estandar = sd(estrato, na.rm = T),
minimo = min(estrato, na.rm = T),
maximo = max(estrato, na.rm = T)); base_estrato
# Estadísticas descriptivas para la variable "miembros_familia"
base_miembros_familia = base %>%
summarise(num_observaciones = sum(!is.na(miembros_familia)),
promedio = mean(miembros_familia, na.rm = T),
desv_estandar = sd(miembros_familia, na.rm = T),
minimo = min(miembros_familia, na.rm = T),
maximo = max(miembros_familia, na.rm = T)); base_miembros_familia
# Dataframe con todas las estadísticas descriptivas juntas para las 4 variables de interés
base_exportar = bind_rows(base_puntaje_saber11,
base_edad,
base_estrato,
base_miembros_familia) %>%
mutate(variable = c("puntaje_saber11",
"edad",
"estrato",
"miembros_familia")) %>%
select(variable, !variable); base_exportar
# Transformar la tabla de estadísticas descriptivas "base_exportar" a una tabla formato latex
xtable(base_exportar, type = "latex", digits = 2)
source("~/Documents/GitHub/semestre8_git/Econometría_avanzada/Talleres_econometria_avanzada/Taller2/Bases_datos/punto3.R", echo=TRUE)
library(tidyverse)
library(readxl)
library(xtable)
# Preliminares ----
# Definición del directorio de trabajo
setwd("~/Documents/GitHub/semestre8_git/Econometría_avanzada/Talleres_econometria_avanzada/Taller2/Bases_datos")
# Importación base de datos
base = read_delim("SPP_Base.csv", delim = "$")
# Visualización de la base de datos
glimpse(base)
# a) tabla de estadı́sticas descriptivas ----
# Se va a generar una tabla de estadísticas descriptivas para: puntaje_saber11, edad, estrato, miembros_familia
# Se reporta el número de observaciones, el promedio de la variable, su desviación estándar y el mı́nimo y máximo observados.
# Estadísticas descriptivas para la variable "puntaje_saber11"
base_puntaje_saber11 = base %>%
summarise(num_observaciones = sum(!is.na(puntaje_saber11)),
promedio = mean(puntaje_saber11, na.rm = T),
desv_estandar = sd(puntaje_saber11, na.rm = T),
minimo = min(puntaje_saber11, na.rm = T),
maximo = max(puntaje_saber11, na.rm = T)); base_puntaje_saber11
# Estadísticas descriptivas para la variable "edad"
base_edad = base %>%
summarise(num_observaciones = sum(!is.na(edad)),
promedio = mean(edad, na.rm = T),
desv_estandar = sd(edad, na.rm = T),
minimo = min(edad, na.rm = T),
maximo = max(edad, na.rm = T)); base_edad
# Estadísticas descriptivas para la variable "estrato"
base_estrato = base %>%
summarise(num_observaciones = sum(!is.na(estrato)),
promedio = mean(estrato, na.rm = T),
desv_estandar = sd(estrato, na.rm = T),
minimo = min(estrato, na.rm = T),
maximo = max(estrato, na.rm = T)); base_estrato
# Estadísticas descriptivas para la variable "miembros_familia"
base_miembros_familia = base %>%
summarise(num_observaciones = sum(!is.na(miembros_familia)),
promedio = mean(miembros_familia, na.rm = T),
desv_estandar = sd(miembros_familia, na.rm = T),
minimo = min(miembros_familia, na.rm = T),
maximo = max(miembros_familia, na.rm = T)); base_miembros_familia
# Dataframe con todas las estadísticas descriptivas juntas para las 4 variables de interés
base_exportar = bind_rows(base_puntaje_saber11,
base_edad,
base_estrato,
base_miembros_familia) %>%
mutate(variable = c("puntaje_saber11",
"edad",
"estrato",
"miembros_familia"),
num_observaciones = double(num_observaciones)) %>%
select(variable, !variable); base_exportar
library(tidyverse)
library(readxl)
library(xtable)
# Preliminares ----
# Definición del directorio de trabajo
setwd("~/Documents/GitHub/semestre8_git/Econometría_avanzada/Talleres_econometria_avanzada/Taller2/Bases_datos")
# Importación base de datos
base = read_delim("SPP_Base.csv", delim = "$")
# Visualización de la base de datos
glimpse(base)
# a) tabla de estadı́sticas descriptivas ----
# Se va a generar una tabla de estadísticas descriptivas para: puntaje_saber11, edad, estrato, miembros_familia
# Se reporta el número de observaciones, el promedio de la variable, su desviación estándar y el mı́nimo y máximo observados.
# Estadísticas descriptivas para la variable "puntaje_saber11"
base_puntaje_saber11 = base %>%
summarise(num_observaciones = sum(!is.na(puntaje_saber11)),
promedio = mean(puntaje_saber11, na.rm = T),
desv_estandar = sd(puntaje_saber11, na.rm = T),
minimo = min(puntaje_saber11, na.rm = T),
maximo = max(puntaje_saber11, na.rm = T)); base_puntaje_saber11
# Estadísticas descriptivas para la variable "edad"
base_edad = base %>%
summarise(num_observaciones = sum(!is.na(edad)),
promedio = mean(edad, na.rm = T),
desv_estandar = sd(edad, na.rm = T),
minimo = min(edad, na.rm = T),
maximo = max(edad, na.rm = T)); base_edad
# Estadísticas descriptivas para la variable "estrato"
base_estrato = base %>%
summarise(num_observaciones = sum(!is.na(estrato)),
promedio = mean(estrato, na.rm = T),
desv_estandar = sd(estrato, na.rm = T),
minimo = min(estrato, na.rm = T),
maximo = max(estrato, na.rm = T)); base_estrato
# Estadísticas descriptivas para la variable "miembros_familia"
base_miembros_familia = base %>%
summarise(num_observaciones = sum(!is.na(miembros_familia)),
promedio = mean(miembros_familia, na.rm = T),
desv_estandar = sd(miembros_familia, na.rm = T),
minimo = min(miembros_familia, na.rm = T),
maximo = max(miembros_familia, na.rm = T)); base_miembros_familia
# Dataframe con todas las estadísticas descriptivas juntas para las 4 variables de interés
base_exportar = bind_rows(base_puntaje_saber11,
base_edad,
base_estrato,
base_miembros_familia) %>%
mutate(variable = c("puntaje_saber11",
"edad",
"estrato",
"miembros_familia"),
num_observaciones = as.double(num_observaciones)) %>%
select(variable, !variable); base_exportar
# Transformar la tabla de estadísticas descriptivas "base_exportar" a una tabla formato latex
xtable(base_exportar, type = "latex", digits = 2)
glimpse(base)
grafica1 = ggplot(base, aes(x = puntaje_saber11, y = elegible_SPP)) %>%
geom_point()
grafica1 = ggplot(base, aes(x = puntaje_saber11, y = elegible_SPP)) +
geom_point()
grafica1 = ggplot(base, aes(x = puntaje_saber11, y = elegible_SPP)) +
geom_point(); grafica1
grafica1 = ggplot(base, aes(x = puntaje_saber11, y = elegible_SPP)) +
geom_point(size = 1, alpha = 0.3, color = "grey") +
theme_light()
grafica1 = ggplot(base, aes(x = puntaje_saber11, y = elegible_SPP)) +
geom_point(size = 1, alpha = 0.3, color = "grey") +
theme_light()
grafica1 = ggplot(base, aes(x = puntaje_saber11, y = elegible_SPP)) +
geom_point(size = 1, alpha = 0.3, color = "grey") +
theme_light(); grafica1
x11()
grafica1 = ggplot(base, aes(x = puntaje_saber11, y = elegible_SPP)) +
geom_point(size = 1, alpha = 0.3, color = "grey") +
theme_light(); grafica1
glimpse(base)
grafica2 = ggplot(base, aes(x = puntaje_saber11, y = beneficiario_spp)) +
geom_point(size = 1, alpha = 0.3, color = "grey") +
theme_light(); grafica2
x11()
grafica2 = ggplot(base, aes(x = puntaje_saber11, y = beneficiario_spp)) +
geom_point(size = 1, alpha = 0.3, color = "grey") +
theme_light(); grafica2
?vline
?vline()
?geom_vline
x11()
grafica1 = ggplot(base, aes(x = puntaje_saber11, y = elegible_SPP)) +
geom_point(size = 0.8, alpha = 0.1, color = "grey") +
geom_vline(xintercept = 310, color = "red") +
theme_light(); grafica1
x11()
grafica2 = ggplot(base, aes(x = puntaje_saber11, y = beneficiario_spp)) +
geom_point(size = 0.8, alpha = 0.1, color = "grey") +
geom_vline(xintercept = 310, color = "red") +
theme_light(); grafica2
install.packages('rdrobust')
library(rdrobust)
?rdplot
View(base)
rdplot(y = base$beneficiario_spp,
x = base$puntaje_saber11,
c = 310, p = 2)
rdplot(y = base$elegible_SPP,
x = base$puntaje_saber11,
c = 310, p = 2)
grafica1 = ggplot(base, aes(x = puntaje_saber11, y = elegible_SPP)) +
geom_point(size = 0.8, alpha = 0.1, color = "grey") +
geom_vline(xintercept = 310, color = "red") +
theme_light(); grafica1
library(tidyverse)
library(readxl)
library(xtable)
library(rdrobust)
rdplot(y = base$elegible_SPP,
x = base$puntaje_saber11,
c = 310, p = 2)
rdplot(y = base$beneficiario_spp,
x = base$puntaje_saber11,
c = 310, p = 2)
?rdplot
?rdrobust
rdplot(y = base$beneficiario_spp,
x = base$puntaje_saber11,
c = 310, p = 1)
rdplot(y = base$elegible_SPP,
x = base$puntaje_saber11,
c = 310, p = 2)
rdplot(y = base$beneficiario_spp,
x = base$puntaje_saber11,
c = 310, p = 1)
rdplot(y = base$beneficiario_spp,
x = base$puntaje_saber11,
c = 310, p = 2)
rdrobust(y = base$elegible_SPP, x = base$puntaje_saber11,
c = 310, p = 1, kernel = "triangular", all = TRUE)
cls
rdrobust(y = base$elegible_SPP, x = base$puntaje_saber11,
c = 310, p = 1, kernel = "triangular", all = TRUE)
rdrobust(y = base$elegible_SPP, x = base$puntaje_saber11,
c = 310, p = 1, kernel = "triangular")
rdrobust(y = base$elegible_SPP, x = base$puntaje_saber11, c = 310, p = 1)
cls
rdrobust(y = base$ies_cualquiera, x = base$puntaje_saber11,
c = 310, p = 2, kernel = "triangular", all = TRUE)
cls
rdrobust(y = base$ies_cualquiera, x = base$puntaje_saber11,
c = 310, p = 2, all = TRUE)
?rdrobust
library(tidyverse)
library(readxl)
library(xtable)
library(rdrobust)
# Definición del directorio de trabajo
setwd("~/Documents/GitHub/semestre8_git/Econometría_avanzada/Talleres_econometria_avanzada/Taller2/Bases_datos")
# Importación base de datos
base = read_delim("SPP_Base.csv", delim = "$")
# Visualización de la base de datos
glimpse(base)
# Estadísticas descriptivas para la variable "puntaje_saber11"
base_puntaje_saber11 = base %>%
summarise(num_observaciones = sum(!is.na(puntaje_saber11)),
promedio = mean(puntaje_saber11, na.rm = T),
desv_estandar = sd(puntaje_saber11, na.rm = T),
minimo = min(puntaje_saber11, na.rm = T),
maximo = max(puntaje_saber11, na.rm = T)); base_puntaje_saber11
x11()
grafica1 = ggplot(base, aes(x = puntaje_saber11, y = elegible_SPP)) +
geom_point(size = 0.8, alpha = 0.1, color = "grey") +
geom_vline(xintercept = 310, color = "red") +
theme_light(); grafica1
rdplot(y = base$elegible_SPP,
x = base$puntaje_saber11,
c = 310, p = 2)
x11()
grafica2 = ggplot(base, aes(x = puntaje_saber11, y = beneficiario_spp)) +
geom_point(size = 0.8, alpha = 0.1, color = "grey") +
geom_vline(xintercept = 310, color = "red") +
theme_light(); grafica2
rdplot(y = base$beneficiario_spp,
x = base$puntaje_saber11,
c = 310, p = 2) # mostrar con p = 1 y p = 2
# Se estima un sharp RDD (polinomio grado 1)
rdrobust(y = base$ies_cualquiera, x = base$puntaje_saber11, c = 310, p = 1, all = TRUE)
# Se estima un sharp RDD (polinomio grado 2)
rdrobust(y = base$ies_cualquiera, x = base$puntaje_saber11, c = 310, p = 2, all = TRUE)
library(tidyverse)
library(readxl)
library(xtable)
library(rdrobust)
# Definición del directorio de trabajo
setwd("~/Documents/GitHub/semestre8_git/Econometría_avanzada/Talleres_econometria_avanzada/Taller2/Bases_datos")
# Importación base de datos
base = read_delim("SPP_Base.csv", delim = "$")
rdplot(y = base$beneficiario_spp,
x = base$puntaje_saber11,
c = 310, p = 2) # mostrar con p = 1 y p = 2
glimpse(base)
rdrobust(y = base$ies_cualquiera, x = base$puntaje_saber11, c = 310, p = 1, all = TRUE)
?rdrobust
# Se estima un sharp RDD (polinomio grado 1)
rdrobust(y = base$ies_cualquiera,
x = base$puntaje_saber11,
c = 310, p = 1,
all = TRUE,
masspoints = "off")
rdrobust(y = base$ies_cualquiera, x = base$puntaje_saber11, c = 310, p = 2, all = TRUE)
glimpse(mtcars)
lm(disp ~ hp, data = mtcars)
# Se estima un sharp RDD (polinomio grado 1)
prueba1 = rdrobust(y = base$ies_cualquiera,
x = base$puntaje_saber11,
c = 310, p = 1,
all = TRUE,
masspoints = "off")
Q = 160
360 * Q - 1/2 Q^2 - 1/2 Q * Q - 2400 - 120 * Q
360 * Q - 1/2 Q^2 - 1/2 * Q * Q - 2400 - 120 * Q
360 * Q - 1/2 * Q^2 - 1/2 * Q * Q - 2400 - 120 * Q
